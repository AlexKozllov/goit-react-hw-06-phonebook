{"version":3,"sources":["components/contactForm/contactForm.module.css","components/animation/shiftAlert.module.css","components/contactList/contactList.module.css","components/app.module.css","components/alert/alert.module.css","components/animation/shiftAnimation.module.css","components/filter/filter.module.css","components/animation/scaleAnimation.module.css","components/animation/shiftAppear.module.css","components/alert/Alert.js","redux/actions/phBookActions.js","redux/constants/phBookConstants.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactList/ContactList.js","components/App.js","redux/redusers/phBookRedusers.js","redux/store.js","index.js"],"names":["module","exports","Alert","text","className","s","box","addContacts","createAction","removeContact","setFilter","InitialState","name","number","validateForm","isExistContact","ContactForm","state","handleInput","e","target","value","setState","handleSubmit","preventDefault","props","id","uuidv4","onCheckUnique","listContacts","find","item","toLowerCase","this","CSSTransition","in","classNames","shiftAlert","timeout","unmountOnExit","contactForm","onSubmit","type","onChange","addBtn","Component","mapDispatchToProps","connect","ownProps","contacts","items","filterValue","findField","filter","visibleContacts","contact","toLocaleLowerCase","includes","getVisibleContacts","length","scaleAnimation","TransitionGroup","component","map","shiftAnimation","listItem","itemName","onClick","App","wrapper","appear","shiftAppear","headerPhoneboo","handlerInput","phBookRedusers","createReducer","action","payload","rootReducer","combineReducers","persistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","middleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.59e0c879.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__3uv3A\",\"addBtn\":\"contactForm_addBtn__LOAy1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"shiftAlert_enter__11sE_\",\"enterActive\":\"shiftAlert_enterActive__Hh5Y4\",\"exit\":\"shiftAlert_exit__2mzm4\",\"exitActive\":\"shiftAlert_exitActive__3SeTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"contactList_listItem__jUK2v\",\"itemName\":\"contactList_itemName__3jcol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app_wrapper__29B5M\",\"headerPhoneboo\":\"app_headerPhoneboo__OoGDO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"alert_box__MvL2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"shiftAnimation_enter__2F-oP\",\"enterActive\":\"shiftAnimation_enterActive__2oOYM\",\"exit\":\"shiftAnimation_exit__2azpU\",\"exitActive\":\"shiftAnimation_exitActive__3VZFB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findField\":\"filter_findField__1fQrE\",\"fade-enter\":\"filter_fade-enter__2LQ6c\",\"fade-enter-active\":\"filter_fade-enter-active__1WmjS\",\"fade-exit\":\"filter_fade-exit__3ebLN\",\"fade-exit-active\":\"filter_fade-exit-active__2m8VH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"scaleAnimation_enter__QF7jG\",\"enterActive\":\"scaleAnimation_enterActive__1sxcv\",\"exit\":\"scaleAnimation_exit__X5aen\",\"exitActive\":\"scaleAnimation_exitActive__-aMDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"shiftAppear_appear__1xIKI\",\"appearActive\":\"shiftAppear_appearActive__1uSa1\"};","import React from \"react\";\r\n\r\nimport s from \"./alert.module.css\";\r\n\r\nconst Alert = ({ text }) => {\r\n  return (\r\n    <div className={s.box}>\r\n      <h4>Warning!</h4>\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport {\r\n  ADDCONTACTS,\r\n  REMOVECONTACT,\r\n  SETFILTER,\r\n} from \"../constants/phBookConstants\";\r\n\r\nconst addContacts = createAction(ADDCONTACTS);\r\n\r\nconst removeContact = createAction(REMOVECONTACT);\r\n\r\nconst setFilter = createAction(SETFILTER);\r\n\r\nexport { addContacts, removeContact, setFilter };\r\n","const ADDCONTACTS = \"@phBook/addContacts\";\r\nconst REMOVECONTACT = \"@phBook/removeContact\";\r\nconst SETFILTER = \"@phBook/setFilter\";\r\n\r\nexport { ADDCONTACTS, REMOVECONTACT, SETFILTER };\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport Alert from \"../alert/Alert\";\r\n\r\nimport s from \"./contactForm.module.css\";\r\nimport shiftAlert from \"../animation/shiftAlert.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContacts } from \"../../redux/actions/phBookActions\";\r\n\r\nconst InitialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  validateForm: true,\r\n  isExistContact: false,\r\n};\r\nclass ContactForm extends Component {\r\n  state = InitialState;\r\n\r\n  handleInput = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { addContacts } = this.props;\r\n    const { name, number } = this.state;\r\n    const isValidateForm = this.validateForm();\r\n    if (!isValidateForm) return;\r\n    addContacts({ id: uuidv4(), name, number });\r\n    this.setState(InitialState);\r\n  };\r\n\r\n  onCheckUnique = (name) => {\r\n    const { listContacts } = this.props;\r\n    const isExistContact = !!listContacts.find(\r\n      (item) => item.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    isExistContact\r\n      ? this.setState({ isExistContact: true })\r\n      : this.setState({ isExistContact: false });\r\n\r\n    return !isExistContact;\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    if (!name || !number) {\r\n      this.setState({ validateForm: false });\r\n      return false;\r\n    }\r\n    if (!!name && !!number) {\r\n      this.setState({ validateForm: true });\r\n    }\r\n    return this.onCheckUnique(name);\r\n  };\r\n\r\n  render() {\r\n    const { isExistContact } = this.state;\r\n    const { name, number, validateForm } = this.state;\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={isExistContact}\r\n          classNames={shiftAlert}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <Alert text=\"Contact is already exist\" />\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={!validateForm}\r\n          classNames={shiftAlert}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <Alert text=\"Some filed is empty\" />\r\n        </CSSTransition>\r\n        <form className={s.contactForm} onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleInput}\r\n            ></input>\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleInput}\r\n            ></input>\r\n          </label>\r\n          <button className={s.addBtn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    listContacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n// const Form = styled.form`\r\n//   input {\r\n//     display: block;\r\n//   }\r\n// `;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/phBookActions\";\r\n\r\nimport s from \"./filter.module.css\";\r\n\r\nconst Filter = ({ filterValue, setFilter }) => {\r\n  const hendleFilter = (e) => {\r\n    const { value } = e.target;\r\n    setFilter(value);\r\n  };\r\n  return (\r\n    <form className={s.findField}>\r\n      <h3>Find contacts by name</h3>\r\n      <input value={filterValue} onChange={hendleFilter} />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setFilter,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport s from \"./contactList.module.css\";\r\nimport shiftAnimation from \"../animation/shiftAnimation.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Filter from \"../filter/Filter\";\r\nimport { removeContact } from \"../../redux/actions/phBookActions\";\r\n\r\nimport scaleAnimation from \"../animation/scaleAnimation.module.css\";\r\n\r\nconst ContactList = ({ listContacts, filter, removeContact }) => {\r\n  const getVisibleContacts = (filter) => {\r\n    if (!!filter) {\r\n      return listContacts.filter((contact) =>\r\n        contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\r\n      );\r\n    } else return listContacts;\r\n  };\r\n\r\n  const visibleContacts = getVisibleContacts(filter);\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={listContacts.length > 1}\r\n        classNames={scaleAnimation}\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Filter filterValue={filter} />\r\n      </CSSTransition>\r\n\r\n      <TransitionGroup component=\"ul\">\r\n        {visibleContacts.map((item) => (\r\n          <CSSTransition\r\n            classNames={shiftAnimation}\r\n            timeout={250}\r\n            key={item.id}\r\n          >\r\n            <li className={s.listItem}>\r\n              <span className={s.itemName}>{item.name}</span>{\" \"}\r\n              <span>{item.number}</span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  removeContact(item.id);\r\n                }}\r\n              >\r\n                &#215;\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  listContacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = { removeContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\n\r\nimport s from \"./app.module.css\";\r\n\r\nimport shiftAppear from \"./animation/shiftAppear.module.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isExistContact: false,\r\n  };\r\n\r\n  render() {\r\n    const { isExistContact } = this.state;\r\n    return (\r\n      <div className={s.wrapper}>\r\n        <CSSTransition\r\n          in={true}\r\n          appear\r\n          classNames={shiftAppear}\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <h1 className={s.headerPhoneboo}>Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm\r\n          handlerInput={this.handlerInput}\r\n          onCheckUnique={this.onCheckUnique}\r\n          isExistContact={isExistContact}\r\n        />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContacts,\r\n  removeContact,\r\n  setFilter,\r\n} from \"../actions/phBookActions\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filter: \"\",\r\n};\r\n\r\nconst phBookRedusers = createReducer(initialState, {\r\n  [addContacts]: (state, action) => ({\r\n    ...state,\r\n    items: [action.payload, ...state.items],\r\n  }),\r\n\r\n  [removeContact]: (state, action) => ({\r\n    ...state,\r\n    items: state.items.filter((item) => item.id !== action.payload),\r\n  }),\r\n\r\n  [setFilter]: (state, action) => ({\r\n    ...state,\r\n    filter: action.payload,\r\n  }),\r\n});\r\n\r\nexport { phBookRedusers };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport thunk from \"redux-thunk\";\r\nimport { phBookRedusers } from \"./redusers/phBookRedusers\";\r\n\r\nconst rootReducer = combineReducers({ contacts: phBookRedusers });\r\n\r\nconst persistConfig = {\r\n  key: \"myContacts\",\r\n  storage,\r\n  whitelist: [\"contacts\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(persistConfig, rootReducer),\r\n  middleware: [thunk],\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}